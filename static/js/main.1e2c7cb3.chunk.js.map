{"version":3,"sources":["utils/http.js","api/index.js","pages/Layout.jsx","utils/getdata.js","pages/Home/Home.jsx","pages/NotFound.jsx","pages/Guonei.jsx","pages/Guoji.jsx","pages/Caijing.jsx","pages/Keji.jsx","pages/Yule.jsx","pages/Junshi.jsx","pages/App.js","index.js"],"names":["fetchPost","url","data","qs","stringify","fetch","body","method","headers","then","json","TabPane","Layout","state","current","visible","user","changeKey","e","key","setState","this","console","log","values","code","username","localStorage","setItem","token","removeItem","getItem","message","warning","window","location","pathname","length","cur","slice","mode","theme","selectedKeys","onClick","Item","to","style","float","logout","bind","type","title","onOk","handleOk","onCancel","handleCancel","defaultActiveKey","onChange","changeTab","tab","name","onFinish","loginFn","label","rules","required","Password","htmlType","regFn","min","max","props","children","Component","getdata","fetchJsonp","jsonpCallbackFunction","Yule","list","dataSource","renderItem","item","Meta","avatar","width","src","imgsrc","description","digest","ptime","NotFound","Caijing","Junshi","alt","marginTop","App","path","exact","component","Home","Guonei","Guoji","Keji","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e2c7cb3.chunk.js","sourcesContent":["//封装网络请求相关的方法\nimport qs from 'querystring'\n//fetch get请求 ？携带数据\nexport function fetchGet(url,data){\n    if(typeof data === 'object'){\n        // 将对象转化为字符串\n        data = qs.stringify(data);\n    }\n    return fetch(url+data)\n    .then(data=>data.json())\n}\n//restful数据一般不封装\n//fetch post  请求\nexport function fetchPost(url,data){\n    if(typeof data === 'object'){\n        data = qs.stringify(data);\n    }\n    // return的意义在于返回一个新的promise对象 不然会报错 undefined。then\n    return fetch(url,{\n        body:data,\n        method:'post',\n        headers:{\n            'Content-Type':'application/x-www-form-urlencoded'\n        }\n    })\n    .then(data=>data.json())\n}","// 定义所有的接口\n// 如果有中间件形式的代理，要把代理的名称写这\n// export const api = '/api'\n\n// 2.自己定义的接口名称\nexport const login = 'login';\nexport const reg = 'reg';\nexport const getdata = 'getdata'\nexport const isexp = 'isexp'\n\n// 3.其他的接口\nexport const junshi = 'BAI67OGGwangning';\nexport const yaowen = 'BBM54PGAwangning';\n\nexport const guonei = 'BA8FF5PRwangning';\nexport const guoji = 'BAI6I0O5wangning';\n\nexport const caijing = 'BA8EE5GMwangning';\nexport const keji = 'BA8D4A3Rwangning';\n\n// export const yule = 'BA10TA81wangning'; \nexport const yule = 'BA8F6ICNwangning'; // 时尚","import React, { Component } from 'react'\nimport { Menu, Button, Modal, Tabs, Form, Input,message } from 'antd'\nimport { Link } from 'react-router-dom'\nimport { fetchPost } from '../utils/http'\nimport {getdata} from '../api/index'\nconst { TabPane } = Tabs\n\nexport default class Layout extends Component {\n    state = {\n        current: 'home',\n        visible: false,\n        user: ''\n    }\n    // 导航上的点击事件\n    changeKey = (e) => {\n        if (e.key === 'login' || e.key === 'user') {\n            this.setState({\n                visible: true\n            })\n        }\n        //  点击选中状态 高亮\n        this.setState({\n            current: e.key\n        })\n    }\n    //登陆注册框确认  取消按钮\n    handleOk() {\n        this.setState({\n            visible: false\n        })\n    }\n    handleCancel() {\n        this.setState({\n            visible: false\n        })\n    }\n    // Tabs修改事件\n    changeTab(e) {\n        console.log(e)\n    }\n    //登陆事件 values参数形参 是用户输入的信息\n    loginFn(values) {\n        console.log('登陆', values);\n        fetchPost('/login', values)\n            .then(data => {\n                console.log(data);\n                if (data.code == 1) {//这是你在router.js里面写的code=1时登陆成功\n                    this.setState({\n                        // 登陆成功了 就不用显示登陆的那个框了\n                        visible: false,\n                        // 把后台请求到的数据中的用户名存储在这\n                        user: data.username\n                    })\n                    //数据持久化\n                    localStorage.setItem('user',data.username)\n                    // 客户端存储这个token\n                    localStorage.setItem('token',data.token)\n                }\n            })\n    }\n    //注册事件\n    regFn(values) {\n        console.log('注册', values);\n        fetchPost('/reg', values)\n            .then(data => {\n                console.log(data);\n                if (data.code == 2) {\n                    //注册成功 注册框不用显示\n                    this.setState({\n                        visible: false\n                    })\n                }\n            })\n    }\n    //退出登陆\n    logout() {\n        //把本地存储的数据删除\n        localStorage.removeItem('user')\n        this.setState({\n            user: ''\n        })\n    }\n    //获取数据 带上token\n    getdata(){\n        let token = localStorage.getItem('token')\n        // 这个getdata是个变量  我后台整理好的接口 是个地址\n        // fetch(getdata + \"?token=\"+token)\n        fetch(getdata,{\n            // 客户端每次与服务器通信，都要带上这个 JWT\n            //把它放在http头信息Authorization中\n            headers:{\n                'Authorization':token\n            }\n        })\n        .then(data=>data.json())\n        .then(data=>{\n            console.log(data);\n            // token已经失效的情况 把登录状态清除\n            if(data.code === -1){\n                message.warning(<div>登录失效，请重新登录</div>)\n                this.setState({\n                    user:''\n                })\n                localStorage.removeItem('token')\n                localStorage.removeItem('user')\n            }\n        })\n    }\n    //  刷新后 路由高亮仍然显示\n    componentDidMount() {\n        if (window.location.pathname.length > 1) {\n            //window. location.pathname是地址栏信息上的路径名字 比如/login 从下标为1的地方截取\n            let cur = window.location.pathname.slice(1)\n            this.setState({\n                current: cur\n            })\n        }\n        //获取本地存储的登录用户\n        let user = localStorage.getItem('user')\n        // 刷新页面时，重新从本地localStorage中获取数据 \n        if(user){\n            this.setState({\n                user:user\n            })\n        }\n    }\n    render() {\n        return (\n            <div>\n                {/* 导航栏 */}\n                <Menu\n                    mode='horizontal'\n                    theme='dark'\n                    selectedKeys={this.state.current}\n                    onClick={this.changeKey}\n                >\n                    <Menu.Item key='home' >\n                        <Link to='/'>首页</Link>\n                    </Menu.Item>\n                    <Menu.Item key='guonei'>\n                        <Link to='/guonei'>国内</Link>\n                    </Menu.Item>\n                    <Menu.Item key='guoji' >\n                        <Link to='/guoji'>国际</Link>\n                    </Menu.Item>\n                    <Menu.Item key='caijing' >\n                        <Link to='/caijing'> 财经</Link>\n                    </Menu.Item>\n                    <Menu.Item key='junshi' >\n                        <Link to='/junshi'>军事</Link>\n                    </Menu.Item>\n                    <Menu.Item key='keji' >\n                        <Link to='/keji'>科技</Link>\n                    </Menu.Item>\n                    <Menu.Item key='yule'>\n                        <Link to='/yule'>娱乐</Link>\n                    </Menu.Item>\n                    {this.state.user.length<=0\n                        ? <Menu.Item key='login' style={{ float: 'right' }}>\n                            登录\n                    </Menu.Item>\n                        :\n                        <Menu.Item key='user' style={{ float: 'right' }}>\n                            {this.state.user}\n                        <Button onClick={this.logout.bind(this)} type='primary'>退出</Button>\n\n                    </Menu.Item>\n                    }\n\n\n                </Menu>\n                {/* 登陆注册框 */}\n                <Modal\n                    title=\"登录|注册\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk.bind(this)}\n                    onCancel={this.handleCancel.bind(this)}\n                >\n                    {/* 这里放置Tabs组件 */}\n                    <Tabs\n                        defaultActiveKey=\"login\"\n                        onChange={this.changeTab.bind(this)}\n                    >\n                        <TabPane tab='登录' key='login'>\n                            <Form\n                                name='login'\n                                onFinish={this.loginFn.bind(this)}\n                            >\n                                <Form.Item\n                                    label='用户名'\n                                    name='username'\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your username!',\n                                        }\n\n                                    ]}\n                                >\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item\n                                    label='密码'\n                                    name='passwd'\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your username!',\n                                        }\n                                    ]}\n                                >\n                                    <Input.Password />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"submit\">\n                                        登录\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </TabPane>\n                        <TabPane tab='注册' key='reg'>\n                            <Form\n                                name='reg'\n                                onFinish={this.regFn.bind(this)}\n                            >\n                                <Form.Item\n                                    label='用户名'\n                                    name='username'\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your username!',\n                                        },\n                                        {\n                                            min: 5,\n                                            max: 16,\n                                            message: '长度是5-16位'\n                                        }\n                                    ]}\n                                >\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item\n                                    label='密码'\n                                    name='passwd'\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your username!',\n                                        },\n                                        {\n                                            min: 5,\n                                            max: 16,\n                                            message: '长度是5-16位'\n                                        }\n                                    ]}\n                                >\n                                    <Input.Password />\n                                </Form.Item>\n                                <Form.Item\n                                    label='确认密码'\n                                    name='passwd2'\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your username!',\n                                        },\n                                        {\n                                            min: 5,\n                                            max: 16,\n                                            message: '长度是5-16位'\n                                        }\n                                    ]}\n                                >\n                                    <Input.Password />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"submit\">\n                                        注册\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </TabPane>\n                    </Tabs>\n                </Modal>\n                {/* <Button type='primary' onClick={this.getdata.bind(this)}>获取数据</Button> */}\n\n\n                {this.props.children}\n\n            </div>\n        )\n    }\n}\n","import fetchJsonp from 'fetch-jsonp'\nimport { Component } from 'react';\n\nfunction getdata(type) {\n    // return 返回一个新的promise\n   return fetchJsonp('https://3g.163.com/touch/reconstruct/article/list/' + type + '/0-10.html', {\n// 写上这个才能解析 json对象  artiList是请求数据最外层的一个名 不懂不懂\n        jsonpCallbackFunction: 'artiList'\n    })\n        .then(data => data.json())\n        .then(data => {\n            console.log(data);\n            // 返回一个纯数组\n            return data[type]\n        })\n\n}\nexport default getdata","import React, { Component } from 'react'\nimport getdata from '../../utils/getdata'\nimport {List} from 'antd'\nimport {yaowen} from '../../api/index'\n\nexport default class Yule extends Component {\n    constructor(){\n        super()\n        this.state={\n            list:[]\n        }\n    }\n\n    componentDidMount(){\n    \n        getdata(yaowen)\n        .then(data=>{\n           this.setState({\n               list:data\n           })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <List\n                    dataSource={this.state.list}\n                    renderItem={(item)=>(<List.Item>\n                        <List.Item.Meta\n                            avatar={<img style={{width:'200px'}} src={item.imgsrc} />}\n                            title={item.title}\n                            description={<div>\n                                <span>{item.digest}</span>\n                                <span>{item.ptime}</span>\n                            </div>}\n                            />\n                    </List.Item>)}\n                ></List>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class NotFound extends Component {\n    render() {\n        return (\n            <div>\n                404\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport getdata from '../utils/getdata'\nimport {List} from 'antd'\nimport {guonei} from '../api/index'\n\nexport default class Yule extends Component {\n    constructor(){\n        super()\n        this.state={\n            list:[]\n        }\n    }\n\n    componentDidMount(){\n    \n        getdata(guonei)\n        .then(data=>{\n           this.setState({\n               list:data\n           })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <List\n                    dataSource={this.state.list}\n                    renderItem={(item)=>(<List.Item>\n                        <List.Item.Meta\n                            avatar={<img style={{width:'200px'}} src={item.imgsrc} />}\n                            title={item.title}\n                            description={<div>\n                                <span>{item.digest}</span>\n                                <span>{item.ptime}</span>\n                            </div>}\n                            />\n                    </List.Item>)}\n                ></List>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport getdata from '../utils/getdata'\nimport {List} from 'antd'\nimport {guoji} from '../api/index'\n\nexport default class Yule extends Component {\n    constructor(){\n        super()\n        this.state={\n            list:[]\n        }\n    }\n\n    componentDidMount(){\n    \n        getdata(guoji)\n        .then(data=>{\n           this.setState({\n               list:data\n           })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <List\n                    dataSource={this.state.list}\n                    renderItem={(item)=>(<List.Item>\n                        <List.Item.Meta\n                            avatar={<img style={{width:'200px'}} src={item.imgsrc} />}\n                            title={item.title}\n                            description={<div>\n                                <span>{item.digest}</span>\n                                <span>{item.ptime}</span>\n                            </div>}\n                            />\n                    </List.Item>)}\n                ></List>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport getdata from '../utils/getdata'\nimport {List,Avatar} from 'antd'\nimport {caijing} from '../api/index'\n\nexport default class Caijing extends Component {\n    constructor(){\n        super()\n        this.state={\n            list:[]\n        }\n    }\n\n    componentDidMount(){\n        getdata(caijing)\n        .then(data=>{\n           this.setState({\n               list:data\n           })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <List\n                    dataSource={this.state.list}\n                    renderItem={(item)=>(<List.Item>\n                        <List.Item.Meta\n                            avatar={<img style={{width:'200px'}} src={item.imgsrc} />}\n                            title={item.title}\n                            description={<div>\n                                <span>{item.digest}</span>\n                                <span>{item.ptime}</span>\n                            </div>}\n                            />\n                    </List.Item>)}\n                ></List>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport getdata from '../utils/getdata'\nimport {List} from 'antd'\nimport {keji} from '../api/index'\n\nexport default class Yule extends Component {\n    constructor(){\n        super()\n        this.state={\n            list:[]\n        }\n    }\n\n    componentDidMount(){\n    \n        getdata(keji)\n        .then(data=>{\n           this.setState({\n               list:data\n           })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <List\n                    dataSource={this.state.list}\n                    renderItem={(item)=>(<List.Item>\n                        <List.Item.Meta\n                            avatar={<img style={{width:'200px'}} src={item.imgsrc} />}\n                            title={item.title}\n                            description={<div>\n                                <span>{item.digest}</span>\n                                <span>{item.ptime}</span>\n                            </div>}\n                            />\n                    </List.Item>)}\n                ></List>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport getdata from '../utils/getdata'\nimport {List} from 'antd'\nimport {yule} from '../api/index'\n\nexport default class Yule extends Component {\n    constructor(){\n        super()\n        this.state={\n            list:[]\n        }\n    }\n\n    componentDidMount(){\n    \n        getdata(yule)\n        .then(data=>{\n           this.setState({\n               list:data\n           })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <List\n                    dataSource={this.state.list}\n                    renderItem={(item)=>(<List.Item>\n                        <List.Item.Meta\n                            avatar={<img style={{width:'200px'}} src={item.imgsrc} />}\n                            title={item.title}\n                            description={<div>\n                                <span>{item.digest}</span>\n                                <span>{item.ptime}</span>\n                            </div>}\n                            />\n                    </List.Item>)}\n                ></List>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { List } from 'antd'\nimport getdata from './../utils/getdata'\nexport default class Junshi extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: []\n        }\n    }\n    componentDidMount() {\n        getdata('BAI67OGGwangning')\n            .then(data => {\n                // 请求到结果后 把data值存到list中\n                this.setState({\n                    list: data\n                })\n            })\n    }\n    render() {\n        return (\n            <div>\n                <List\n                    dataSource={this.state.list}\n                    renderItem={(item) => (<List.Item>\n                        <List.Item.Meta\n                            avatar={<img style={{ width: '200px' }} src={item.imgsrc} alt=''/>}\n                            title={<div style={{marginTop:'25px'}}>{item.title}</div>}\n                            description={<div >\n                                <span>{item.digest}</span>\n                                <span>{item.ptime}</span>\n                            </div>}\n                        />\n                    </List.Item>)}\n                ></List>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Layout from './Layout'\nimport Home from './Home/Home'\nimport NotFound from './NotFound'\nimport Guonei from './Guonei'\nimport Guoji from './Guoji'\nimport Caijing from './Caijing'\nimport Keji from './Keji'\nimport Yule from './Yule'\nimport Junshi from './Junshi'\nexport default class App extends Component {\n    render() {\n        return (\n            <div>\n                <BrowserRouter>\n                    <Layout path='/'>\n                        <Switch>\n                            {/* 要闻，国内，国际，财经，科技，娱乐，军事 */}\n                            <Route path='/' exact component={Home}></Route>\n                            <Route path='/guonei' exact component={Guonei}></Route>\n                            <Route path='/guoji' exact component={Guoji}></Route>\n                            <Route path='/caijing' exact component={Caijing}></Route>\n                            <Route path='/keji' exact component={Keji}></Route>\n                            <Route path='/yule' exact component={Yule}></Route>\n                            <Route path='/junshi' exact component={Junshi}></Route>\n                            {/* path='*' 这个*号是一个通配符，可以匹配任何路径 */}\n                            <Route path='*' component={NotFound} />\n                        </Switch>\n                    </Layout>\n\n\n                </BrowserRouter>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}